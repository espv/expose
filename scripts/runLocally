#!/bin/bash
experiment_id=$1
number_nodes=$2
host_number_threads=$(grep -c ^processor /proc/cpuinfo)
remote_number_threads=$3
stream_processing_system=$4
node_to_run=$5
rootlogdir=$6
yaml_config=$7
isolated_cpu_core=$8
uuid=$(cat /proc/sys/kernel/random/uuid)
uuid=${uuid: -4}
dt=`date +%s`
dt=${dt: -10}
scriptdir="~/Research/PhD/Private-WIP/stream-processing-experiments/scripts"
logdir=$rootlogdir/log/experiment-${experiment_id}/${stream_processing_system}/${dt}-${uuid}
trace_path=$logdir/traces
my_ip=$(hostname -I | cut -d' ' -f1)
pids=()
mkdir -p $logdir/StreamProcessors
mkdir -p $logdir/Mediators
echo "mkdir -p $trace_path"
mkdir -p $trace_path

# USAGE: ./<script> <experiment_id> <number_nodes> <remote_number_threads> <stream_processing_system>
# Example: ./<script> 2 3 1 Flink
# Example: ./<script> 2 10 1 Siddhi

# This must be random
port_base=$RANDOM

function add_spe() {
	i=$1
	finished=
	while [ ! $finished ]
	do
		node_id=0000$i
		abbreviated_node_id=${node_id: -4}
		port=$((port_base+i))
		port=0000$port
		port=${port: -4}
		fuser -k 4$port/tcp
		fuser -k 5$port/tcp
		./wait_while_port_taken 5$port
		./wait_while_port_taken 4$port
		echo "Running ./single$stream_processing_system $host_number_threads $port $trace_path 1>$logdir/StreamProcessors/${abbreviated_node_id}.log 2>&1"
		./single$stream_processing_system $host_number_threads $port $trace_path 1>$logdir/StreamProcessors/${abbreviated_node_id}.log 2>&1 &
		PID=$!
		sleep 1
		if [ -n "$(ps -p $PID -o pid=)" ]; 
		then
			finished=1
		fi
		echo "SPE died"
	done
}

for i in $(seq "$number_nodes");
do
	if [ $i -eq 2 ]; then
		continue
	fi
	add_spe $i
	pids+=($PID)
done

remote_port=$((port_base+2))
remote_port=0000$remote_port
remote_port=${remote_port: -4}
abbreviated_remote_node_id=0002

cmd="fuser -k 4$remote_port/tcp"
$cmd
cmd="fuser -k 5$remote_port/tcp"
$cmd
cmd="$scriptdir/wait_while_port_taken 4$remote_port"
cmd
cmd="$scriptdir/wait_while_port_taken 5$remote_port"
$cmd
cmd="./single$stream_processing_system $host_number_threads $port $trace_path 1>$logdir/StreamProcessors/${abbreviated_node_id}.log 2>&1"
echo "running 'ansible $node_to_run -a $cmd"
$cmd 1>$logdir/StreamProcessors/${abbreviated_remote_node_id}.log 2>&1 &
pids+=($!)
echo "Remote port $remote_port"

echo "Starting coordinator"
echo "Running './runMaster $experiment_id $yaml_config 1>$logdir/Coordinator.log 2>&1'"
./runMaster $experiment_id $yaml_config 1>$logdir/Coordinator.log 2>&1 &
coordinator_pid=$!

sleep 5

echo "Starting mediators"
for i in $(seq "$number_nodes");
do
	if [ $i -eq 2 ]; then
		continue
	fi
	node_id=0000$i
	abbreviated_node_id=${node_id: -4}
	port=$((port_base+i))
	port=0000$port
	port=${port: -4}
	echo "Running './runSlave $abbreviated_node_id $port $my_ip $yaml_config 1>$logdir/Mediators/${abbreviated_node_id}.log 2>&1 &'"
	./runSlave $abbreviated_node_id $port $my_ip $yaml_config 1>$logdir/Mediators/${abbreviated_node_id}.log 2>&1 &
	pids+=($!)
done


cmd="./runSlave ${abbreviated_remote_node_id} ${remote_port} ${my_ip} $yaml_config"
$cmd 1>$logdir/Mediators/${abbreviated_remote_node_id}.log 2>&1 &
pids+=($!)

echo "Waiting for coordinator to finish"
wait $coordinator_pid
echo "Finished experiment $experiment_id"

for i in "${pids[@]}"
do
	pkill -TERM -P $i&
done

pkill ansible
